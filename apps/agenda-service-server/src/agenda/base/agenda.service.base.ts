/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Agenda as PrismaAgenda } from "@prisma/client";

export class AgendaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AgendaCountArgs, "select">): Promise<number> {
    return this.prisma.agenda.count(args);
  }

  async agendaItems<T extends Prisma.AgendaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaFindManyArgs>
  ): Promise<PrismaAgenda[]> {
    return this.prisma.agenda.findMany<Prisma.AgendaFindManyArgs>(args);
  }
  async agenda<T extends Prisma.AgendaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaFindUniqueArgs>
  ): Promise<PrismaAgenda | null> {
    return this.prisma.agenda.findUnique(args);
  }
  async createAgenda<T extends Prisma.AgendaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaCreateArgs>
  ): Promise<PrismaAgenda> {
    return this.prisma.agenda.create<T>(args);
  }
  async updateAgenda<T extends Prisma.AgendaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaUpdateArgs>
  ): Promise<PrismaAgenda> {
    return this.prisma.agenda.update<T>(args);
  }
  async deleteAgenda<T extends Prisma.AgendaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AgendaDeleteArgs>
  ): Promise<PrismaAgenda> {
    return this.prisma.agenda.delete(args);
  }
}
